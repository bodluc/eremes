<?php eval(base64_decode("
/* Logaholic Web Analytics software             Copyright(c) 2005-2011 Logaholic B.V.
 *                                                               All rights Reserved.
 * This code is subject to the Logaholic license. Unauthorized copying is prohibited.
 * support@logaholic.com                         http://www.logaholic.com/License.txt
*/ 

$dont_close_session = true;

include_once "common.inc.php";

$profiles=1;  // this is so it doesn't loop includes from top.php

// Which profile are we editing?
$curprofilename = @$_REQUEST["editconf"];

// Are we editing or creating a new one
$restoreDefaultDashboard = @$_REQUEST["restoredefaultdashboard"];
$update_method = @$_REQUEST["update_method"];
$set_update_preference = @$_REQUEST["set_update_preference"];
$edit = @$_REQUEST["edit"];
$new = @$_REQUEST["new"];
$install = @$_REQUEST["install"];
$save = @$_REQUEST["save"];
$del = @$_REQUEST["del"];
$backup = @$_REQUEST["backup"];
$specialq = @$_REQUEST["specialq"];
$mode = @$_REQUEST["mode"];
$search = @addslashes(trim($_REQUEST["search"]));
$sfield = @$_REQUEST["sfield"];
$update_countries = @$_REQUEST["update_countries"];
$set_profile_structure_version = @$_REQUEST["set_profile_structure_version"];   
SecurityCheck(@$_REQUEST["newconfname"]);

if ($curprofilename && $validUserRequired && (!$session->isAdmin() && !$session->canAccessProfile($curprofilename))) {
	die(_SORRY_NO_RIGHTS.": $curprofilename");
}

//edit profile
// Load the profile that we're currently trying to edit.
$editprofile = new SiteProfile($curprofilename);

if (isset($_REQUEST['copy_to'])) {
    if (isset($_REQUEST['with_data'])) {
        $editprofile->copyProfile($_REQUEST['copy_to'],true);    
    } else {
        $editprofile->copyProfile($_REQUEST['copy_to'],false);    
    }
    exit();        
}

$saved = "";
$saveerror = false;



if ((isset($save)) && isset($_REQUEST) && (isset($curprofilename) || (isset($_REQUEST["newconfname"]) && isset($install)))) {
	
	if ($editprofile->trackermode!=@$_REQUEST["trackermode"]) {
        // we're switching data colection method.
        if ($_REQUEST["trackermode"]==1) {
            if ($_REQUEST["visitoridentmethod"]!=3) {
                $_REQUEST["visitoridentmethod"]=3;
                $saved .= "<br>Visitor Identification method was automatically changed to: Cookie<br>";
            }
        } else {
            $saved .= "<br>Please check if Visitor Identification method on the Advanced tab is still correct<br>";    
        } 
    }
    
    // These are all user editable values.    
	$editprofile->confdomain = (isset($_REQUEST["confdomain"])) ? $_REQUEST["confdomain"] : $editprofile->confdomain;
	$editprofile->equivdomains = (isset($_REQUEST["equivdomains"])) ? $_REQUEST["equivdomains"] : $editprofile->equivdomains;
	if (get_magic_quotes_gpc()) {
		$editprofile->equivdomains = stripslashes($editprofile->equivdomains);
	}
	$editprofile->defaultfile = (isset($_REQUEST["defaultfile"])) ? $_REQUEST["defaultfile"] : $editprofile->defaultfile;
	$editprofile->splitlogs = (isset($_REQUEST["splitlogs"])) ? $_REQUEST["splitlogs"] : 0;  // Checkboxes don't get posted in IE if they're false.
	$editprofile->splitfilter = (isset($_REQUEST["splitfilter"])) ? $_REQUEST["splitfilter"] : $editprofile->splitfilter;
    $editprofile->splitfilternegative = (isset($_REQUEST["splitfilternegative"])) ? $_REQUEST["splitfilternegative"] : $editprofile->splitfilternegative; 
	$editprofile->trackermode = (isset($_REQUEST["trackermode"])) ? $_REQUEST["trackermode"] : $editprofile->trackermode;
    $editprofile->skipips = (isset($_REQUEST["skipips"])) ? $_REQUEST["skipips"] : $editprofile->skipips;
	if (get_magic_quotes_gpc()) {
		$editprofile->skipips = stripslashes($editprofile->skipips);
	}
	$editprofile->skipfiles = (isset($_REQUEST["skipfiles"])) ? $_REQUEST["skipfiles"] : $editprofile->skipfiles;
	$editprofile->targetfiles = (isset($_REQUEST["targetfiles"])) ? $_REQUEST["targetfiles"] : $editprofile->targetfiles;
	$editprofile->usepagecache = (isset($_REQUEST["caching"])) ? $_REQUEST["caching"] : $editprofile->targetfiles;
	$editprofile->animate = (isset($_REQUEST["animate"])) ? $_REQUEST["animate"] : $editprofile->animate;
    $editprofile->timezonecorrection = (isset($_REQUEST["timezonecorrection"])) ? $_REQUEST["timezonecorrection"] : $editprofile->timezonecorrection;
    $editprofile->timezone = (isset($_REQUEST["timezone"])) ? $_REQUEST["timezone"] : $editprofile->timezone;
    $newvisitoridentmethod = (isset($_REQUEST["visitoridentmethod"])) ? $_REQUEST["visitoridentmethod"] : $editprofile->visitoridentmethod;
    $visitoridentmethodswitched = ($editprofile->visitoridentmethod != $newvisitoridentmethod);
    $editprofile->visitoridentmethod = $newvisitoridentmethod;
    $editprofile->recursive = (isset($_REQUEST["recursive"])) ? $_REQUEST["recursive"] : 0;    
    $editprofile->ftpserver = (isset($_REQUEST["ftpserver"])) ? $_REQUEST["ftpserver"] : $editprofile->ftpserver;
    $editprofile->ftpuser = (isset($_REQUEST["ftpuser"])) ? $_REQUEST["ftpuser"] : $editprofile->ftpuser;
    $editprofile->ftppasswd = (isset($_REQUEST["ftppasswd"])) ? $_REQUEST["ftppasswd"] : $editprofile->ftppasswd;
    $editprofile->ftpfullpath = (isset($_REQUEST["ftpfullpath"])) ? $_REQUEST["ftpfullpath"] : $editprofile->ftpfullpath;
    $editprofile->visittimeout = (isset($_REQUEST["visittimeout"])) ? $_REQUEST["visittimeout"] : $editprofile->visittimeout;
    $editprofile->urlparamfilter = (isset($_REQUEST["urlparamfilter"])) ? $_REQUEST["urlparamfilter"] : $editprofile->urlparamfilter;
    $editprofile->urlparamfiltermode = (isset($_REQUEST["urlparamfiltermode"])) ? $_REQUEST["urlparamfiltermode"] : $editprofile->urlparamfiltermode;
    $editprofile->googleparams = (isset($_REQUEST["googleparams"])) ? $_REQUEST["googleparams"] : $editprofile->googleparams;
    $editprofile->feedurl = (isset($_REQUEST["feedurl"])) ? $_REQUEST["feedurl"] : $editprofile->feedurl;
    $editprofile->feedburneruri = (isset($_REQUEST["feedburneruri"])) ? $_REQUEST["feedburneruri"] : $editprofile->feedburneruri; 
	
	// check global custom date and profile custom date.
	$format = array(
		"format1" => "m",
		"seperator1" => "-",
		"format2" => "d",
		"seperator2" => "-",
		"format3" => "Y",
		"seperator3" => " ",
		"format4" => ""				
	);
	$format = serialize($format);
	$date_format = getGlobalSetting("profileDateFormat",$format);
	$date_format = unserialize($date_format);
	if(isset($_REQUEST["format1"])){
		$editprofile->dateFormat = array(
			"format1" => $_REQUEST["format1"],
			"seperator1" => $_REQUEST["seperator1"],
			"format2" => $_REQUEST["format2"],
			"seperator2" => $_REQUEST["seperator2"],
			"format3" => $_REQUEST["format3"],
			"seperator3" => $_REQUEST["seperator3"],
			"format4" => $_REQUEST["format4"]	
		);
		if($editprofile->dateFormat == $date_format){
			deleteProfileData($editprofile->profilename, $editprofile->profilename.".profileDateFormat");
		} else {
			$save = serialize($editprofile->dateFormat);
			setProfileData($editprofile->profilename, $editprofile->profilename.".profileDateFormat",$save);
		}
	} else {
		$editprofile->dateFormat = $editprofile->dateFormat;
		
	}
	
	$editprofile->facebooklogin = (isset($_REQUEST["facebooklogin"])) ? $_REQUEST["facebooklogin"] : $editprofile->facebooklogin;
	
	$editprofile->logparsertype = (isset($_REQUEST["log_parser_type"])) ? $_REQUEST["log_parser_type"] : $editprofile->logparsertype;
    $editprofile->includebackup = (isset($_REQUEST["includebackup"])) ? $_REQUEST["includebackup"] : $editprofile->includebackup;
                                                                                                       
	// If we have proper security rights, edit these core values.
	if (!$validUserRequired || $session->canAddProfiles())  {
		if (get_magic_quotes_gpc()) {
			// We're gonna have some slashes!
			if (isset($_REQUEST["logfilefullpath"])) {$_REQUEST["logfilefullpath"] = stripslashes($_REQUEST["logfilefullpath"]); }
		}
		
		$editprofile->profilename = (isset($_REQUEST["newconfname"])) ? $_REQUEST["newconfname"] : $editprofile->profilename;
		$editprofile->tablename = (isset($_REQUEST["tablename"])) ? $_REQUEST["tablename"] : $editprofile->tablename;
		$editprofile->logfilefullpath = (isset($_REQUEST["logfilefullpath"])) ? str_replace("\\", '/', $_REQUEST["logfilefullpath"]) : $editprofile->logfilefullpath;
	}
	
	// Check and see if variables are correctly set to save...
	$cansave = true;	
	if (!$editprofile->profilename) {
		$saved .= "<font color=\"red\">"._NO_PROFILE_NAME_ENTERED."</font><br>";
		$cansave = false;
		$saveerror = true;
		$edit=1;
	}

	
    if (!$editprofile->tablename && $conf!="newcnf") {
		$saved .= "<font color=\"red\">"._NO_MYSQL_TABLE_ENTERED."</font><br>";
		$cansave = false;
		$saveerror = true;
		$edit=1;
	}
    
    
	if ($conf=="newcnf" || $new==1) {
		$checklimits = "Select profilename from ".TBL_PROFILES;
		$checklimitsresult = $db->Execute($checklimits) or die(_COULDNT_QUERY_PROFILES.". " . $db->ErrorMsg());
		if (defined("_LIMIT_PROFILES") != 0) {
			  if ($checklimitsresult->RecordCount() > _LIMIT_PROFILES) {
				  $saved .= "<font color=\"red\">"._TOO_MANY_PROFILES."</font><br>";
				  $cansave = false;
				  $saveerror = true;
				  $edit=1;            
			  }
		}
	}		
	
	if (defined("_ENABLE_IMPORTANT_PARAMETER_EDITOR_")) {
  	$important_param_count = $_REQUEST["importantparampagecount"];
  	for ($param_loop = 0; $param_loop < $important_param_count; $param_loop ++) {
  		unset($thisparam);
  		$thisparam = false;
  		if (($_REQUEST["paramid_".$param_loop]) && ($param_loop < $editprofile->getUrlParamCount())) {
  			// It's an existing one.
  			$thisparam =& $editprofile->getUrlParamByIndex($param_loop);
  			$thisparam["paramid"] = $_REQUEST["paramid_".$param_loop];
  		} else {
  			if ($_REQUEST["paramurl_".$param_loop] > "") {
  				$thisparam =& $editprofile->getUrlParamNew();
  			}
  		}
  		if ($thisparam) {
  			$thisparam["filename"] = $_REQUEST["paramurl_".$param_loop];
  			$thisparam["importantparams"] = $_REQUEST["paramnames_".$param_loop];
  		}
  	}
  	
  	$important_param_count = $_REQUEST["importantparampagecount"];
  	for ($param_loop = 0; $param_loop < $important_param_count; $param_loop ++) {
  		if (@$_REQUEST["DeleteParam_" . $param_loop]) {
  			$editprofile->deleteUrlParams($param_loop);
  		}
  	}
  }	
	if ($cansave) {

		$editprofile->dieonsqlerror = false;
		$editprofile->Save();
        if ($validUserRequired) {
        if ($session->canAddProfiles() && !$session->isAdmin()) {
            //echo "Adding profile to user account";
            // if the user can add profiles, he should be the default manager as well
            $session->user_profiles[count($session->user_profiles)]=$editprofile->profilename;
            $db->Execute("UPDATE ".TBL_USERS." SET PROFILES=concat(PROFILES,',$editprofile->profilename') WHERE username = '$session->username' ");
            //echo "UPDATE _logaholic_users SET PROFILES=concat(PROFILES,',$editprofile->profilename') WHERE username = '$session->username' ";
            
            
        }
        }
		/* we don't do this anymore */
        /*
		if ($editprofile->trackermode==1) {
            $treal_path = realpath("index.php");
            $tpath = dirname($treal_path);
            $tracker_logfile=$tpath."/files/".$editprofile->profilename.".log";
            $thandle = fopen ($tracker_logfile, "a");
            //fwrite($thandle,"# Logfile created by Logaholic Web Analytics - www.logaholic.com\n");
            fclose($thandle);
            @chmod($tracker_logfile, 0666);
        }
        */
        
    if ($editprofile->lastsqlerror) {
			$saved .= "<font color=\"red\">".$editprofile->lastsqlerror."</font><br>";
			$edit=1;
			$saveerror = true;
		} else {
			$saved .= _PROFILE_CONF_SAVED.".<br>";
			unset($edit);
			unset($new);
		}
		if ($visitoridentmethodswitched) {
			// We need to recalculate the current visitor identification method.
		}
	}
}


if (isset($install) && ($install==1) && (!$saveerror)) {
    if ($q = @$db->Execute("select * from $editprofile->tablename limit 1")) {
        $chk=$q->FetchRow();
        //$saved=$saved."Mysql Table <b>$editprofile->tablename</b> already exists, skipping CREATE.<br>";
    } else {
        createDataTable($editprofile);
        $saved=$saved."Created tables for <b>$editprofile->tablename</b> in database <b>$DatabaseName</b><br>"; //HELP!
    }
    
    $step=5;
    $conf=$editprofile->profilename;
    header("location: install.php?step=5&conf=".urlencode($editprofile->profilename)."&saved=".urlencode($saved));
    exit();
}

if ($backup == 2) {
	// Export the .gzipped backup file.
    set_time_limit(86400);
    if (isset($_REQUEST['days_in_file'])) {
		$days_in_file = $_REQUEST['days_in_file'];
	} else {
		$days_in_file = 1;
	}
    $real_path = realpath("index.php");
    $path = dirname($real_path);
    $path = str_replace ("\\", "/", $path);
    
    $ndays = round(($to- $from)/(86400*$days_in_file));
	$i=0;
	$finalto=$to;
	$to=$from;
	ob_start();
	while ($i < $ndays) {
		$from = $to;
		$to=$from+(86400*$days_in_file);
		if (@$upgrade!="true") {
			// $q=$db->Execute("select timestamp, v.ipnumber as ipnumber,u.url as url,up.params as params,status,bytes,r.referrer as referrer,rp.params as refparams, AGENTS.name useragent from
			// $editprofile->tablename as a, $editprofile->tablename_visitorids as v, $editprofile->tablename_urls as u,$editprofile->tablename_urlparams as up, $editprofile->tablename_referrers as r, $editprofile->tablename_refparams as rp, ".TBL_USER_AGENTS." as AGENTS where timestamp >= $from and timestamp <= $to and (a.visitorid=v.id and a.url=u.id and a.params=up.id and a.referrer=r.id and a.refparams=rp.id and a.useragentid = AGENTS.id) order by timestamp");
			$q = $db->Execute("SELECT a.timestamp, v.ipnumber AS ipnumber, u.url AS url, up.params AS params, a.status, a.bytes, r.referrer AS referrer, rp.params AS refparams, b.useragent AS useragent FROM
			{$editprofile->tablename} as a, {$editprofile->tablename_visitorids} AS v, {$editprofile->tablename_urls} AS u, {$editprofile->tablename_urlparams} AS up, {$editprofile->tablename_referrers} AS r, {$editprofile->tablename_refparams} AS rp, {$editprofile->tablename_useragents} AS b WHERE a.timestamp >= {$from} and a.timestamp <= {$to} AND (a.visitorid = v.id AND a.url = u.id AND a.params = up.id AND a.referrer = r.id AND a.refparams = rp.id AND a.useragentid = b.id) ORDER BY a.timestamp");
			
			if ($mode=="csv") {
				$bupfile=$path . "/files/$curprofilename.". date("Ymd",$from) . date("-Ymd",$to) . ".csv.gz";
			} else {
				$bupfile=$path . "/files/$curprofilename.". date("Ymd",$from) . date("-Ymd",$to) . ".log.gz";
			}
		} else {
			// $q=$db->Execute("select $editprofile->tablename.*, AGENTS.name useragent from $editprofile->tablename left outer join ".TBL_USER_AGENTS." AGENTS on (useragentid = AGENTS.id) order by timestamp");
			$q = $db->Execute("SELECT {$editprofile->tablename}.*, b.useragent AS useragent FROM {$editprofile->tablename} AS a, {$editprofile->tablename_useragent} AS b ON (a.useragentid = b.id) ORDER BY timestamp");			
			$bupfile=$path . "/files/$curprofilename.backup.log.gz";  
		}   
		 
		
		//$gfile=exec("pwd") . "/files/global.php";
		$fp = gzopen ($bupfile,"w");
		if ($mode=="csv") {
			// write a headre row
			$buffer= "\"IP number\",\"Date\",\"URL\",\"Status\",\"Bytes\",\"Referrer\",\"Useragent\"\n"; //HELP!
			//echo $buffer;
			gzwrite ($fp, $buffer);
		}
		while ($data=$q->FetchRow()) {
			if ($data["refparams"]=="?") {
				$data["refparams"]="";
			}
			$date=date("[d/M/Y:H:i:s +0000]",$data["timestamp"]);
			if ($mode=="csv") {
				$buffer= "\"$data[ipnumber]\",\"$date\",\"".$data["url"].$data["params"]."\",\"$data[status]\",\"$data[bytes]\",\"".$data["referrer"].$data["refparams"]."\",\"".$data["useragent"]."\"\n"; 
				
			} else {
			   $buffer= "$data[ipnumber] - - $date \"GET ".$data["url"].$data["params"]." HTTP/1.1\" ".$data["status"]." ".$data["bytes"]." \"".$data["referrer"].$data["refparams"]."\" \"".$data["useragent"]."\"\n";
			}
			
			//echo $buffer;
			gzwrite ($fp, $buffer);
		}
		gzclose ($fp);
		$i++;
		echo "wrote file: $bupfile<br>";
		lgflush();
	}
    if (@$upgrade!="true") { 
        if ($mode=="csv") {
            echo "<P><li> "._OK_CSV_FILE_WRITTEN_IN." <b>$bupfile</b>.</P><P>"._PLEASE_DOWNLOAD_NOW.":<br> <b><a href=\"files/$curprofilename.". date("Ymd",$from) . date("-Ymd",$to) . ".csv.gz\"> files/$curprofilename.". date("Ymd",$from) . date("-Ymd",$to) . ".log.gz </a></b><ul><li>The first row in this file contains the column names</li><li>Fields in this CSV file are sperated by a comma</li><li>All fields are enclosed in \" \" double quotes.</li></ul></p>"; //HELP!
        } else {
            echo "<P><li> OK, log file written. Please download now:<br> <b><a href=\"files/$curprofilename.". date("Ymd",$from) . date("-Ymd",$to) . ".log.gz\"> files/$curprofilename.". date("Ymd",$from) . date("-Ymd",$to) . ".log.gz </a></b><P>";    
        }
        echo "<P>We recommend to remove the file from the server once you have downloaded it.<P>";
    
    } else { 
        @$db->Execute("drop table $editprofile->tablename");
        @$db->Execute("drop table $editprofile->tablename_vpd");
        @$db->Execute("drop table $editprofile->tablename_vpm");
        @$db->Execute("drop table $editprofile->tablename_dailyurls"); 
        @$db->Execute("drop table $editprofile->tablename_conversions");
        createDataTable($editprofile);
        echo "OK, log file written to $bupfile.<P> <a href=\"update.php?conf=$editprofile->profilename&upgrade=$bupfile\">Click here to continue upgrade</a>. (Imports you old log data back into the new database stucture)<P>When that is done, you can safely remove or archive the file: $bupfile";
    } 
    exit();
}

if (isset($set_profile_structure_version)) {
    if ($editprofile->profileloaded) {
        if (!$validUserRequired || @$session->isAdmin()) {
            echoWarning("Manually changed this profile's structure version to from $editprofile->structure_version to $set_profile_structure_version");
            $editprofile->structure_version = $set_profile_structure_version;
            $editprofile->Save();
            // now we have to reload the profile (also the $profile one which is created in common and used in top to check versions!)
            $editprofile->Load($editprofile->profilename);
            $profile->Load($profile->profilename); 
        } else {
            echoWarning(_SORRY_NO_PERMISSIONS);
        }            
    }
}

include "top.php";

if (isset($_REQUEST['archivetable'])) {
    include "includes/archivetable.php";
}

// No rights to create a new one?  Turn off the "New" flag
if ($validUserRequired && (!$session->isAdmin() && !$session->canAddProfiles())) {
	unset($new);
}

if ((isset($save)) && ($editprofile->profileloaded) && (!$saveerror)) {
	if ($q = @$db->Execute("select * from $editprofile->tablename limit 1")) {
		$chk=$q->FetchRow();
        createDataTable($editprofile); 
		//$saved=$saved."Mysql Table <b>$editprofile->tablename</b> already exists, skipping CREATE.<br>";
	} else {
		createDataTable($editprofile);
		$saved=$saved."Created tables for <b>$editprofile->tablename</b> in database <b>$DatabaseName</b><br>";  
	}
	
	// Get The users facebook ID and TOKEN
	if(!empty($editprofile->facebooklogin) && getProfileData($editprofile->profilename, $editprofile->profilename."facebookApi".$editprofile->facebooklogin , false ) == false){
		deleteProfileData($editprofile->profilename, $editprofile->profilename."facebookApi%");
		deleteProfileData($editprofile->profilename, $editprofile->profilename."facebookApiForm");
		deleteProfileData($editprofile->profilename, $editprofile->profilename."facebookAppForm");
		deleteProfileData($editprofile->profilename, $editprofile->profilename."facebookPageForm");
		$saved.="<div id='facebook_feedback'></div>";
		$saved.= "<script src='http://facebook.logaholic.com/facebook_access.php?email={$editprofile->facebooklogin}&conf={$editprofile->profilename}'></script>";
	}
}
$start=getmicrotime();

if ($validUserRequired && !$session->isAdmin() && !empty($del)) {
	echoWarning(_SORRY_NO_PERMISSIONS,'margin:0 20px 5px;');
	$_REQUEST["del"] = '';
	$del = '';
}

if (!isset($del)) {
	$del=0; 
}
if ($del==1) {
	 if ($curprofilename!="") {
		echo "<div class=\"indentbody\"><b>"._DATABASE_MAINTENANCE_OPTIONS.": <font color=red>$editprofile->profilename</font></b><p>";
        echo "<P>"._PLEASE_CHOOSE_AN_OPTION.":<P><ul>";
        //if (!$validUserRequired || @$session->canEditProfiles()) {
        if (!$validUserRequired || @$session->canUpdateLogs()) {                    
		    echo "<li><a href=\"profiles.php?editconf=$curprofilename&backup=1\">"._BACKUP_EXPORT;
		    echo "<li><a href=\"profiles.php?editconf=$curprofilename&restoredefaultdashboard=1\"><b>". _RESTORE_DEFAULT_DASHBOARD . "</b></a><p>";
		}
		
		if ((!$validUserRequired) || ($session->canEditProfiles())) {
		    echo "<li><a href=\"get_reports.php?conf=$curprofilename\"><b>"._INSTALL_REPORTS."</b></a><p>";
		    echo "<li><a href=\"reportupdates.php?conf=$curprofilename\"><b>"._UPDATE.' '._REPORTS."</b></a><p>";
		}
		
		if(LOGAHOLIC_VERSION_STATUS == 'dev') {
        // if (!$validUserRequired || $session->isAdmin()) {
			echo "<li><a href=\"profiles.php?editconf={$curprofilename}&update_method=1\"><b>"._UPDATE_METHOD_PREFERENCE."</b></a><p>";
		}
		
        if (!$validUserRequired || @$session->canUpdateLogs()) {
		    echo "<li><a href=\"profiles.php?editconf=$curprofilename&del=5\"> "._DELETE_DATE_RANGE;
            echo "<LI> <a href=\"profiles.php?editconf=$curprofilename&del=2\" onclick=\"return confirm('"._DELETE_PROFILE_AND_DATABASE_ASSURANCE."')\">"._DELETE_PROFILE_AND_DATABASE."</a> <P>";
            echo "<li> <a href=\"profiles.php?editconf=$curprofilename&del=4\" onclick=\"return confirm('"._DELETE_DATABASE_ASSURANCE."')\">"._DELETE_DATABASE."</a><p>";
            echo "<li> <a href=\"profiles.php?editconf=$curprofilename&del=7\" onclick=\"return confirm('"._DELETE_SUMMARY_TABLES_ASSURANCE."')\">"._DELETE_SUMMARY_TABLES."</a><p>";
            echo "<li><a href=\"profiles.php?editconf=$curprofilename&del=8\">"._DELETE_CACHE."</a><p></ul>";
        }
        
        if (!$validUserRequired || @$session->canUpdateLogs()) { 
            echo "<li><b>"._SPECIALTY_UPDATE_OPTIONS."</b>:<P><ul>";
            echo "<li><a href=\"profiles.php?editconf=$curprofilename&update_countries=1\">Update Country Information in Database</a><p>"; 
            echo "<li><a href=\"profiles.php?editconf=$curprofilename&del=11\"> "._UPDATE_SUMMARY_TABLES_WOUT_CHECKING."</a><p>";
            echo "<li><a href=\"update.php?conf=$curprofilename&force=true\"> "._UPDATE_STATS_WOUT_DATE_RANGE_CHECKS."</a><p>";
            echo "<li><a href=\"update.php?conf=$curprofilename&force=true&movedone=true\" onclick=\"return confirm('"._MOVE_TO_DONE_ASSURANCE."')\">"._MOVE_TO_DONE."</a><p></ul>";
        }
        echo "<li><a href=\"profiles.php?editconf=$curprofilename&edit=1\"> "._EDIT_PROFILE."</a><P>";
		echo "<li><a href=\"profiles.php?editconf=$curprofilename\"> <b>"._CANCEL."</b></a></ul>";
        echo "<P>";
        
        if (!$validUserRequired || @$session->canAddProfiles()) {
          if ($q = @$db->Execute("SELECT table_schema \"Data Base Name\", table_name, sum( data_length + index_length ) / 1024 / 1024 \"Data Base Size in MB\" FROM information_schema.TABLES where table_schema='$DatabaseName' and (table_name='$editprofile->tablename' or table_name like '$editprofile->tablename\_%') GROUP BY table_schema")) {
            
            $chk=$q->FetchRow();
            $info = _TOTAL_SIZE_OF_THIS_PROFILE." ".number_format($chk[2],0)." MB. ";
            $q = $db->Execute("select count(*) from $editprofile->tablename");
            $chk=$q->FetchRow();
            $info.= _THERE_ARE." $chk[0] "._RECORDS_IN_MAIN_SPANNING." ";
            $q = $db->Execute("select timestamp from $editprofile->tablename order by timestamp asc limit 1");
            $chk=$q->FetchRow();
            $from=$chk[0];
            $info.= date("Y-m-d",$chk[0]) . " to ";
            $q = $db->Execute("select timestamp from $editprofile->tablename order by timestamp desc limit 1");
            $chk=$q->FetchRow();
            $to=$chk[0];
            $info.= date("Y-m-d,  H:i:s",$chk[0]) . ". ("._SEE_MORE_STATISTICS_BELOW.")<br><br>";
            $info.= "Profile stucture version is: $editprofile->structure_version";
            echoNotice($info,"width:640px;");
          }
        }
        
        
        if (!$validUserRequired || @$session->canAddProfiles()) { 
            $query= "SELECT table_name, table_rows, sum( data_length + index_length ) / 1024 / 1024 \"Data Base Size in MB\" ";
            //$query .= ", concat(\"<a href=profiles.php?editconf=$curprofilename&archivetable=\",table_name,\">Create archive</a>\") as archive ";
            $query .= "FROM information_schema.TABLES where table_schema='$DatabaseName' and (table_name='$editprofile->tablename' or table_name like '$editprofile->tablename\_%') GROUP BY table_name";
            //$showfields="table name,"._RECORDS.","._SIZEINMB.", Archive";
            $showfields="table name,"._RECORDS.","._SIZEINMB;
            $labels=_DATABASE_STATISTICS;
            //$mini=1;
            echo "<table width=640><tr><td>";
            @StatsTable($from,$to,$showfields,$labels,$query,$drilldown,$filter);
            echo "</td></tr></table>";
        }
        
        echo "</div>" ;
		exit();
    }
}

if ($del==2) {
	if ($editprofile->profileloaded) {
        if (!$validUserRequired || @$session->canEditProfiles()) {
        
	        echo "<div class=indentbody><font color=red>Last Action:</font><br><i>";
		    $query = "Delete from ".TBL_PROFILES." where profileid = ".$editprofile->profileid;
		    if (!$db->Execute($query)) {
		     die(_COULDNT_DELETE_PROFILE." " . $db->ErrorMsg());
		    } else {
			    echo _DELETED_PROFILE.": <b>".$editprofile->profilename."</b><br>";
		    }
		    deleteProfileData($editprofile->profilename);
		    if (!$db->Execute("drop table ".$editprofile->tablename)) {
			    echo("<p>"._COULDNT_DROP_TABLE." ".$editprofile->tablename.", ".$db->ErrorMsg()."</p>");
		    } else {
			    echo _DROPPED_DB_TABLES.": <b>".$editprofile->profilename."</b><br>";
		    }
		    @$db->Execute("drop table $editprofile->tablename_vpd");
		    @$db->Execute("drop table $editprofile->tablename_vpm");
            @$db->Execute("drop table $editprofile->tablename_dailyurls"); 
		    @$db->Execute("drop table $editprofile->tablename_conversions");
		    @$db->Execute("drop table $editprofile->tablename_urls");
            @$db->Execute("drop table $editprofile->tablename_urlparams");
            @$db->Execute("drop table $editprofile->tablename_keywords");
            @$db->Execute("drop table $editprofile->tablename_referrers");
            @$db->Execute("drop table $editprofile->tablename_refparams");
            @$db->Execute("drop table $editprofile->tablename_sessionids");
            @$db->Execute("drop table $editprofile->tablename_visitorids");
            @$db->Execute("drop table $editprofile->tablename_screenres");
            @$db->Execute("drop table $editprofile->tablename_colordepth");
            @$db->Execute("drop table $editprofile->tablename_useragents");
            @$db->Execute("drop table ".$editprofile->tablename."_tlength"); // these last 2 are semi temporary tables that should be deleted when running Total Duration and Timeon site Today reports, but we'll delete then here just in case.
            @$db->Execute("drop table ".$editprofile->tablename."_vlength");
            @$db->Execute("drop table $editprofile->tablename_trackerlog");
		    
		    echo _SUMMARY_TABLES_DROPPED.".<br>"._DONE.".</i></div><hr noshade size=1><br>";
            deleteProfileData($editprofile->profilename);
			
			unset($_SESSION['profileobject']);
			unset($_SESSION['profilename']);
        } else {
            echo "<div class=\"indentbody\">";
            echoWarning(_SORRY_NO_PERMISSIONS);
            echo "<P>&nbsp;</P></div>";
        } 
	}
}

if ($del==3) {
	 if ($editprofile->profileloaded) {
		 $query = "Delete from ".TBL_PROFILES." where profileid = ".$editprofile->profileid;
		 $db->Execute($query) or die("Couldn't delete profile. " . $db->ErrorMsg());
		 deleteProfileData($editprofile->profilename);
		 echo "<div class=\"indentbody\"><font color=red>"._LAST_ACTION.":</font><br>"._DELETED_PROFILE.": <b>$editprofile->profilename</b><br>"._PLEASE_DROP_DB_TABLES." <b>'$editprofile->tablename'</b> "._MANUALLY_OR_KEEP_IT."</i></div><hr noshade size=1><br>";
         deleteProfileData($editprofile->profilename); 
	 }
}

if ($del==4) {
	if ($editprofile->profileloaded) {
        if (!$validUserRequired || @$session->canEditProfiles()) {
		
            deleteDataTable($editprofile); 
        
		    createDataTable($editprofile);
		
  	        // deleteProfileData($editprofile->profilename);
			
			deleteProfileData($editprofile->profilename, "cache\_%");
			deleteProfileData($editprofile->profilename, $editprofile->tablename."%\_cachearray");
			deleteProfileData($editprofile->profilename, $editprofile->profilename.".cache\_%");
			deleteProfileData($editprofile->profilename, $editprofile->profilename."cache_trail");
			deleteProfileData($editprofile->profilename, "lastlogpos.%");
			deleteProfileData($editprofile->profilename, "firstlogline.%");
			deleteProfileData($editprofile->profilename, "1stlogline.%");
			deleteProfileData($editprofile->profilename, "lastknownpos.%");
			deleteProfileData($editprofile->profilename, $editprofile->profilename.".bandwidthData");
			deleteProfileData($editprofile->profilename, $editprofile->profilename.".update_running");
			deleteProfileData($editprofile->profilename, $editprofile->profilename.".perlupdate_running");
  	
		    echo "<div class=\"indentbody\"><font color=red>"._LAST_ACTION.":</font><br><i>"._DELETED_DB_TABLES." <b>'$editprofile->tablename'</b> "._AND_SUMMARIES_PROFILE_SAVED."</i></div><hr noshade size=1><br>";
        } else {
            echo "<div class=\"indentbody\">";
            echoWarning(_SORRY_NO_PERMISSIONS);
            echo "<P>&nbsp;</P></div>"; 
        }
	}
}
if ($del==5) {
	if ($editprofile->profileloaded) {
        if (!$validUserRequired || @$session->canEditProfiles()) {
		    echo "<div class=\"indentbody\">"._DELETE_DATE_RANGE_FROM." <b>$editprofile->profilename</b><P><form method=get action=\"profiles.php\">";
		    echo "<input type=hidden name=del value=6>";
		    DateSelector($from,$to);
		    echo "<input type=radio name=what value=2 checked> "._DELETE_ALL_LOG_DATA."<br>";
            echo "<input type=radio name=what value=1> "._DELETE_ONLY_DETAIL_DATA."<br>";
            echo "<input type=radio name=what value=3> "._DELETE_ONLY_SUMMARY_DATA."<br>";
		    echo "<input type=hidden name=editconf value=\"$curprofilename\">";
		    echo "<input type=submit name=submit value=Delete>  "._PLEASE_BE_PATIENT_DELETING_TAKES_A_WHILE."</div>";
		    exit();
        } else {
            echo "<div class=\"indentbody\">";
            echoWarning(_SORRY_NO_PERMISSIONS);
            echo "<P>&nbsp;</P></div>";
        }
	}
}
if ($del==6) {
	if ($editprofile->profileloaded) {
		$what = $_REQUEST["what"];
		echo "<div class=\"indentbody\"><font color=red>"._LAST_ACTION.":</font><br><i>";
        DeleteRange($editprofile,$what);
        
        
        echo "</i></div><hr noshade size=1><br>";
  	}
}

if ($del==7) {
	if ($editprofile->profileloaded) {
        if (!$validUserRequired || @$session->canEditProfiles()) { 
		    $db->Execute("drop table $editprofile->tablename_vpd");
		    $db->Execute("drop table $editprofile->tablename_vpm");
            $db->Execute("drop table $editprofile->tablename_dailyurls"); 
		    $db->Execute("drop table $editprofile->tablename_conversions");
            createDataTable($editprofile);
		    echo "<div class=\"indentbody\"><font color=red>"._LAST_ACTION.":</font><br><i>"._DELETED_SUMMARY_DATA_IN_DATE_RANGE.". "._SUMMARIES_WILL_BE_RECALCULATED.".</i></div><hr noshade size=1><br>";
        } else {
            echo "<div class=\"indentbody\">";
            echoWarning(_SORRY_NO_PERMISSIONS);
            echo "<P>&nbsp;</P></div>";
        }    
	}
}
if ($del==8) {
	if ($editprofile->profileloaded) {
		deleteProfileData($editprofile->profilename, "cache\_%");
        deleteProfileData($editprofile->profilename, $editprofile->profilename."cache_trail");
		echo "<div class=\"indentbody\"><font color=red>"._LAST_ACTION.":</font><br><i>"._ALL_CACHE_FILES_DELETED.".</i></div><hr noshade size=1><br>";
	}
}

if ($del==9) { // this deletes a specific file or ip from the database
    if ($editprofile->profileloaded) {
        $fldname= $_REQUEST["fldname"];
        $fldvalue= @$_REQUEST["fldvalue"]; 
        echo "<div class=\"identbody\">"._DELETE." <font color=red>$fldvalue</font> "._FROM." <b>$editprofile->profilename</b><P><form method=post action=\"profiles.php\">";
        echo "<input type=hidden name=del value=10>";
        DateSelector($from,$to);
        echo "<br>$fldname: <input type=text name=fldvalue value=\"$fldvalue\"> ("._EXACT_VALUE_ONLY.")<p>";
        echo "<input type=hidden name=fldname value=\"$fldname\">";
        echo "<input type=hidden name=editconf value=\"$curprofilename\">";
        echo "<input type=checkbox name=recal value=\"1\" checked> "._RECALCULATE_SUMMARY_TABLES; 
        echo "<input type=submit name=submit value=Delete>  </div>";

        exit();
    }
}
if ($del==10) {
    if ($editprofile->profileloaded) {
        $fldname= $_REQUEST["fldname"];
        $fldvalue= @$_REQUEST["fldvalue"];
        $recal= @$_REQUEST["recal"];
        
        
        if ($fldname=="page") {
           $q = @$db->Execute("select id from $editprofile->tablename_urls where url='$fldvalue'");
           $page=$q->FetchRow();
           $db->Execute("delete from $editprofile->tablename where timestamp >=$from and timestamp <=$to and url='$page[id]'");
           $db->Execute("delete from $editprofile->tablename_dailyurls where timestamp >=$from and timestamp <=$to and url='$page[id]'");
           $db->Execute("delete from $editprofile->tablename_conversions where timestamp >=$from and timestamp <=$to and url='$page[id]'");    
        } else if ($fldname=="ipnumber") {
            $q = @$db->Execute("select id from $editprofile->tablename_visitorids where ipnumber='$fldvalue'");
            while ($page=$q->FetchRow()) {
                $db->Execute("delete from $editprofile->tablename where timestamp >=$from and timestamp <=$to and visitorid='$page[id]'");
                $db->Execute("delete from $editprofile->tablename_conversions where timestamp >=$from and timestamp <=$to and visitorid='$page[id]'"); 
                
            }
        }
        echo "<div class=\"indentbody\"><font color=red>Last Action:</font><br><i>";
        if ($recal==1){ 
            $db->Execute("delete from $editprofile->tablename_vpm where timestamp >=$from and timestamp <=$to");
            $db->Execute("delete from $editprofile->tablename_vpd where timestamp >=$from and timestamp <=$to");
            
            //$db->Execute("delete from $editprofile->tablename_screenres where timestamp >=$from and timestamp <=$to");
            //$db->Execute("delete from $editprofile->tablename_colordepth where timestamp >=$from and timestamp <=$to");
            echo "Deleted $fldname $fldvalue, will recalculate summary tables now ...";
           //deleteProfileData($editprofile->profilename);
           
           echo("<form name=progress>"._PROGRESS.":<br><input type=text name=perc size=1 value=\"0\" class=pbar>% &nbsp;");
           echo("<input type=text name=progbar size=46 value=\"|\" class=progbar><P>");
           echo(_STATUS.": <input type=text name=ptext size=85 class=pbar value=\"start\" class=progbar><P>");
           echo("</form>");
           echo "<br><br>";
           // function echoConsoleSafe($txt) {
                // echo $txt;   
           // }
           $profile = new SiteProfile($curprofilename);
           $conf=$curprofilename;
           $orist=$from;
           ?>
            <script>
            function pbar(p) {
                self.document.forms.progress.perc.value=p;
                self.document.forms.progress.progbar.value=self.document.forms.progress.progbar.value+'|';
            }
            function pstatus(p) {
                self.document.forms.progress.ptext.value=p;
            }
            </script>
            <?php
           include "update_summaries.php";
           echo "</div>";
       
       }
       echo _IF_YOU_WANT_TO_KEEP." <b>$fldvalue</b> "._OUT_OF_FUTURE_STATS." ";
       if ($fldname=="page") {
            echo _SKIP_FILES." ";
       } else {
            echo _SKIP_IP_NUMBERS." ";  
       }
       echo _FIELD_ON_THE_DATA_COLLECTION_TAB_IN_YOUR." $curprofilename "._PROFILE_SETTINGS.".</i></div><hr noshade size=1><br>";   
      }
}

if ($del==11) { // this just does update_summaries without adding any new traffic from the log files
    if ($editprofile->profileloaded) {
       
        echo "<div class=\"indentbody\"><font color=red>"._LAST_ACTION.":</font><br>"; 
            
           echo "<i>"._UPDATE_SUMMARIES_WOUT_CHECKING_NEW_DATA."...</i>";
           
           echo("<form name=progress>"._PROGRESS.":<br><input type=text name=perc size=1 value=\"0\" class=pbar>% &nbsp;");
           echo("<input type=text name=progbar size=46 value=\"|\" class=progbar><P>");
           echo(_STATUS.": <input type=text name=ptext size=85 class=pbar value=\"start\" class=progbar><P>");
           echo("</form>");
           echo "<br><br>";
           // function echoConsoleSafe($txt) {
                // echo $txt;   
           // }
           $profile = new SiteProfile($curprofilename);
           $conf=$curprofilename;
           //$orist=$from;
           ?>
            <script>
            function pbar(p) {
                self.document.forms.progress.perc.value=p;
                self.document.forms.progress.progbar.value=self.document.forms.progress.progbar.value+'|';
            }
            function pstatus(p) {
                self.document.forms.progress.ptext.value=p;
            }
            </script>
            <?php
           include "update_summaries.php";
      }
}

if ($update_countries==1) {
    if ($editprofile->profileloaded) {
        if (!$validUserRequired || @$session->canUpdateLogs()) {
            echo "<div class=\"indentbody\"><h3>Update Geographic Location information for '$editprofile->profilename'</h3>";
            echo "<p>You can use this tool if you have updated (or just installed) the Geo Location database and want to update country information on records already stored in your Logaholic database for this profile.</p>";
            echo "<P>The date range will affect which visitors are checked (only visitorid's <em>first created</em> within the date range) and which records will be updated (only hits within the date range).</P>";
            echo "<p><b>Select the date range you want to update geographic information for:</b></p>";
            echo "<form method=get action=\"profiles.php\">";
            echo "<input type=hidden name=\"update_countries\" value=2>";
            $daterange = GetMaxDateRange($editprofile);
            DateSelector($daterange['from'],$daterange['to']);
            echo "<input type=hidden name=editconf value=\"$curprofilename\">";
            echo "<input type=submit name=submit value=\""._UPDATE_NOW."\" style=\"margin-top:5px;font-size:14px;\">";
            echo "</div></body></html>";
            exit();
        } else {
            echo "<div class=\"indentbody\">";
            echoWarning(_SORRY_NO_PERMISSIONS);
            echo "<P>&nbsp;</P></div>";
        }
    }        
}
if ($update_countries==2) {
    if ($editprofile->profileloaded) {
        if (!$validUserRequired || @$session->canUpdateLogs()) {
            $profile=$editprofile;
            include "includes/update_countries.php";
            echo "<div class=\"indentbody\">";
            $uc = new UpdateCountries();
            $uc->DisplayProgress();
            $uc->UpdateRange($from,$to);
            echo "</div></body></html>";
            exit();
        } else {
            echo "<div class=\"indentbody\">";
            echoWarning(_SORRY_NO_PERMISSIONS);
            echo "<P>&nbsp;</P></div>";
        }
    }        
}


if (!isset($backup)) {
	$backup=0; 
}
if ($backup==1) {
	echo "<div class=\"indentbody\"><b>"._BACKUP_EXPORT_DATE_RANGE_FROM." <font color=red>$curprofilename</font></b><P>";
	echo "<form method=get action=\"profiles.php\">";
	echo "<table width=450 class=smallborder><tr><td class=small>"._YOU_CAN_EXPORT_DATA_FROM_TABLE." ($editprofile->tablename) "._IN_ORDER_TO_BACKUP."</td></tr></table><P>";
	echo "<input type=hidden name=backup value=2>";
	DateSelector($from,$to);
	echo "<input type=hidden name=editconf value=\"$curprofilename\">";
    echo "<P>"._FILE_FORMAT.": <select name=\"mode\"><option value=\"logfile\" selected> "._APACHE_COMBINED_LOG_FILE_FORMAT." <option value=\"csv\"> "._CSV_FORMAT."</select></p>"; 
	echo "<P><input type=submit name=submit value=\"Download Backup File\"></div>";
    echo "</body></html>";
	exit();
}

if (isset($_REQUEST["globalstats"])=="yes") { 
    echo "<div class='indentbody'>&nbsp;<br>";
    include "includes/globalstats.php";    
    echo "</div></body></html>";
    exit();
}
if(isset($restoreDefaultDashboard)){
	$editprofile->setDefaultDashboard();
	echo "<div class=\"indentbody\">";
	echo _YOUR_DEFAULT_DASHBOARD_HAS_BEEN_RESTORED;
	echo "</div>";
}
if(isset($update_method)) {
	if(isset($set_update_preference)) {
		if($set_update_preference == 'perl') {
			$set_update_preference = 'perl';
		} else {
			$set_update_preference = 'regular';
		}
		setProfileData($profile->profilename, "{$profile->profilename}.updatePreference", $set_update_preference);
		$db->Query("DELETE from ".TBL_GLOBAL_SETTINGS." WHERE `Name` = 'canDoPerlUpdate'");
		
		echo "<div class=\"indentbody\">".str_replace("%s", $set_update_preference, _UPDATE_METHOD_HAS_BEEN_SET_TO)."</div>";
	} else {
		include_once("components/import/import.php");
		$importClass = new Import();
		
		echo "<div style='margin: 0 0 0 35px; width: 400px;'>";
		// $perlcheck = $importClass->availableCheck(true);
		$perlable = $importClass->availableCheck();
		
		if($perlable['hasError'] == true) {
			// echo "You can't update your statistics with Perl.<br/>Follow the <a href='http://www.logaholic.com/manual/LogaholicManual/MakingLogaholicReadyForPerlUpdates'>instructions</a> in the Logaholic Manual if you desire the Perl method.";
			echo "<h3>"._YOUR_MACHINE_IS_NOT_ABLE_TO_USE_PERL."</h3>";
			
			unset($perlable['hasError']);
			
			foreach($perlable as $key => $perltest) {
				echo $perltest."<br/>";
			}
			
			echo "<p>".str_replace("%s", "<a href='http://www.logaholic.com/manual/LogaholicManual/UpdateLogaholicStatsUsingPerl' target='_blank'>tutorial</a>", _VISIT_PERL_INSTALL_TUTORIAL)."</p><br/>";
			echo "<a style='background: none repeat scroll 0 0 #1970B4; border-radius: 4px 4px 4px 4px; color: #FFFFFF; padding: 5px 10px; text-decoration: none;' href='{$_SERVER['REQUEST_URI']}'>Check again</a>";
		} else {
			echo "<h3>"._SET_YOUR_UPDATE_METHOD_PREFERENCE."</h3>";
			echo "<p style='margin-bottom: 24px;'>";
				echo _WOULD_YOU_LIKE_TO_TRY_PERL_UPDATE."<br/>";
			echo "</p>";
			echo "<a style='background-color: #333333; border-radius: 4px 4px 4px 4px; color: #FFFFFF; padding: 5px 10px; text-decoration: none;' href='profiles.php?conf={$curprofilename}&update_method=1&set_update_preference=regular'>"._NO_USE_REGULAR_UPDATE."</a>";
			echo "<a style='margin-left: 25px; background: none repeat scroll 0 0 #1970B4; border-radius: 4px 4px 4px 4px; color: #FFFFFF; padding: 5px 10px; text-decoration: none;' href='profiles.php?conf={$curprofilename}&update_method=1&set_update_preference=perl'>"._YES_USE_PERL_UPDATE."</a>";
		}
		echo "</div>";
		exit;
	}
}

if (!isset($edit) && (!isset($new))) {
	 
    // list all profiles
	
     if ($saved!="") {
			echo "<p class=\"indentbody\"><font color=red>"._LAST_ACTION.":</font><br><i><b>$editprofile->profilename</b> ".$saved."</i></p><hr noshade size=1><br>";
	 }
	 ?>
	 <div class=indentbody>
    <script language="javascript" type="text/javascript">
    function prowOverEffect(object) {
	    if (object.className == 'profilerow') object.className = 'profilerowhighlight';
    }

    function prowOutEffect(object) {
	    if (object.className == 'profilerowhighlight') object.className = 'profilerow';
    }
    </script>
    <?php
        
    // see how many profiles there are in total, if it's more than 5 print a SEARCH BOX
    $query = "Select count(*) from ".TBL_PROFILES.";";
    $result = $db->Execute($query) or die(_COULDNT_QUERY_PROFILES." " . $db->ErrorMsg());
    $result = $result->FetchRow(); 
    $numprofiles=$result[0];
	
	if (($validUserRequired) && (!$session->isAdmin())) {
		if(!isset($validprofiles)){ $validprofiles = ''; }
		
		$query = "SELECT COUNT(*) FROM ".TBL_PROFILES." WHERE profilename IN (\"{$validprofiles}\")";
		$result = $db->Execute($query) or die(_COULDNT_QUERY_PROFILES." " . $db->ErrorMsg());
		$amountOfRightfulProfiles = $result->FetchRow();
		$amountOfRightfulProfiles = $amountOfRightfulProfiles[0];
	} else {
		$amountOfRightfulProfiles = $numprofiles;
	}
	
    if ($amountOfRightfulProfiles > 5) {
        // if (($validUserRequired) && (!$session->isAdmin())) {
            // you have to be admin to see the search box
        // } else {             
        ?>
          <form method="post" action="profiles.php<?php echo !empty($_GET['num_pp']) ? "?num_pp={$_GET['num_pp']}" : ""; ?>">
          Search profiles matching: <input type="text" name="search" value="<?php echo @$search; ?>"> 
          in field: 
            <select name="sfield">
                <option value="profilename" <?php if (@$sfield=="profilename") { echo "selected"; } ?>> <?php echo _PROFILE_NAME;?>
                <option value="confdomain" <?php if (@$sfield=="confdomain") { echo "selected"; } ?>> <?php echo _DOMAIN_NAME;?>
            </select>     
            <input type="submit" value="Search">    
          </form>
          <br>
          <?php
        // }
    }
    
    echo "<div style=\"width:600px;\">";
    if (!$validUserRequired || $session->isAdmin() || $session->canAddProfiles()) {
        echo "<div style=\"float:left;line-height:16px;padding-right:20px;margin-bottom:6px;\">";
        if ((!defined("_LIMIT_PROFILES")) || (_LIMIT_PROFILES == 0)) {
            echo "<img src=\"images/icons/add_profile.gif\" width=16 height=16 align=left alt=\"New\"> <a href=\"profiles.php?conf=newcnf&amp;new=1\">"._CREATE_NEW_PROFILE."</a>";
        } else {
            if ($numprofiles >= _LIMIT_PROFILES) {
                echo "<img src=\"images/icons/add_profile.gif\" width=16 height=16 align=left alt=\"Upgrade\"> "._TOO_MANY_PROFILES_PLEASE_UPGRADE."";      
            } else {
                echo "<img src=\"images/icons/add_profile.gif\" width=16 height=16 align=left alt=\"New\"> <a href=\"profiles.php?conf=newcnf&amp;new=1\">"._CREATE_NEW_PROFILE."</a>";
            }
        }
        echo "</div>";          
    }
    
	if($amountOfRightfulProfiles > 1) {
		echo "<div style=\"float:left;line-height:16px;margin-bottom:6px;\"><img src=\"images/icons/pie.gif\" width=16 height=16 align=left alt=\"New\"> <a href=\"profiles.php?globalstats=yes\">"._GLOBAL_STATISTICS_OVERVIEW."</a></div>";
	}
    echo "</div>"; 
	
	?>
    
    <table cellpadding=6 cellspacing=0 border=0 style="min-width:600px;clear:both;">
		<tr><td colspan=5  class=toplineblue bgcolor="#BBDDFF"><img src="images/icons/profiles.gif" width=16 height=16 align=left alt="<?php echo _MANAGE_PROFILES;?>"> &nbsp;&nbsp;<font size=3><b><?php echo _MANAGE_PROFILES;?></b></font></td></tr>
	<?php       
    
    $query = "Select profilename,tablename,profileid from ".TBL_PROFILES;
	
	// If we're limiting the visible profiles, then put a filter on to only pull those records.
	if (($validUserRequired) && (!$session->isAdmin())) {
		// Can't use implode here because we need to escape the entries.
		$validprofiles = "";
		for ($i = count($session->user_profiles)-1; $i >= 0; $i--) {
			if ($validprofiles != "") { $validprofiles .= "\",\""; }
			$validprofiles .= $db->escape($session->user_profiles[$i]);
		}
		$query .= " where profilename in (\"$validprofiles\")";
	}
	if (@$search) {
		if(strpos($query, 'where') !== false) {
			$query .= " AND $sfield LIKE '%$search%'";
		} else {
			$query .= " WHERE $sfield LIKE '%$search%'";
		}
    }
    
    $query.=" order by profilename";
	$items_per_page = 50;
    if (defined("_LIMIT_PROFILES") != 0) {
      $query.=" limit 0,"._LIMIT_PROFILES;
	  $num_of_items = _LIMIT_PROFILES;
    } else {
		/* Pagination config starts here */
		$num_of_items = 0; # The total amount of items
		$max_links = 5; # The amount of page numbers to show
		
		$count_query = "SELECT COUNT(*) AS `max_profiles` FROM ".TBL_PROFILES;
		if (($validUserRequired) && (!$session->isAdmin())) {
			// Can't use implode here because we need to escape the entries.
			$validprofiles = "";
			for ($i = count($session->user_profiles)-1; $i >= 0; $i--) {
				if ($validprofiles != "") { $validprofiles .= "\",\""; }
				$validprofiles .= $db->escape($session->user_profiles[$i]);
			}
			$count_query .= " WHERE profilename IN (\"{$validprofiles}\")";
		}
		$amount_result = $db->Execute($count_query);
		
		$num_of_items = $amount_result->FetchRow();
		$num_of_items = $num_of_items['max_profiles'];

		if(!empty($_GET['num_pp'])) {
			if($_GET['num_pp'] == 'All') {
				$items_per_page = $num_of_items;
			} else {
				$items_per_page = $_GET['num_pp'];
			}
		}		
		if(!empty($_GET['page_num'])) {
			$page_num = $_GET['page_num'];
		} else {
			$page_num = 1;
		}
		
		$query .= " LIMIT ".floor(($page_num - 1) * $items_per_page).", ".$items_per_page;
		/* Pagination config ends here */
	}
	
	
	$result = $db->Execute($query) or die(_COULDNT_QUERY_PROFILES." " . $db->ErrorMsg());
    if ($result->RecordCount() == 0) {
		echo "<tr><td colspan=5 class=\"profilerow\">"._YOU_HAVE_NO_ACTIVE_PROFILES.".</td></tr>";
	} else {
		while ($profile_row = $result->FetchRow()) {
			$profilename = $profile_row[0];
            $profile_tablename = $profile_row[1];
			if ($conf==$profilename || $editconf==$profilename) {
				$sel=" <font color=red>("._ACTIVE.")</font>";
				$bgc="bgcolor=#CCFFCC";
				$class="";
			} else {
				$sel="";
				$bgc="";
				$class="onmouseover=\"prowOverEffect(this)\" onmouseout=\"prowOutEffect(this)\"";
			}
			echo "<tr class=\"profilerow\" $class><td $bgc style=\"font-size:13px;\" class=\"dotline2\" title=\"{$profile_row[2]}\"><b>$profilename</b> $sel</td><td $bgc style=\"font-size:13px;\" class=dotline2><img src=\"images/icons/date.gif\" width=16 height=16 align=left alt=\""._VIEW_STATS."\"> <a href=\"index.php?conf=$profilename\">"._VIEW_STATS."</a></td>";
			if ((!$validUserRequired) || ($session->canUpdateLogs())) {
                echo "<td $bgc class=dotline2><img src=\"images/icons/update.gif\" width=16 height=16 align=left alt=\""._UPDATE_NOW."\"> <a href=\"update.php?conf=$profilename\">"._UPDATE_NOW."</a></td>";
            }
            if ((!$validUserRequired) || ($session->canEditProfiles())) {
                /*
                $rq= @$db->Execute("select count(*) from $profile_tablename");
                $recs = @$rq->FetchRow();
                $recs = number_format($recs[0], 0, '.', ''); 
                echo "<td $bgc class=dotline2><img src=\"images/icons/edit.gif\" width=16 height=16 align=left alt=\"Edit\"><a href=\"profiles.php?editconf=$profilename&amp;edit=1\">"._EDIT_PROFILE."</a></td><td $bgc class=dotline2 title=\"This profile contains $recs data records\"> <img src=\"images/icons/delete.gif\" width=16 height=16 align=left alt=\"Delete\"><a href=\"profiles.php?editconf=$profilename&amp;del=1\">"._MAINTENANCE."</a></td></tr>";
                */
                echo "<td $bgc class=dotline2><img src=\"images/icons/edit.gif\" width=16 height=16 align=left alt=\"Edit\"><a href=\"profiles.php?editconf=$profilename&amp;edit=1\">"._EDIT_PROFILE."</a></td>";
            }
            if ((!$validUserRequired) || ($session->canEditProfiles())) {
                echo "<td $bgc class=dotline2> <img src=\"images/icons/delete.gif\" width=16 height=16 align=left alt=\"Delete\"><a href=\"profiles.php?editconf=$profilename&amp;del=1\">"._MAINTENANCE."</a></td></tr>";
            } else {
                echo "</tr>";   
            }
		}
		
		if ($num_of_items > $items_per_page) {
			echo "<tr><td cellspacing='0' cellpadding='0' colspan='5'>";			
				if (defined("_LIMIT_PROFILES") == 0) {
					echo "<div class='profile_pagination'>";
						if(ceil($num_of_items/$items_per_page) > 1) {
							echo pagination($num_of_items, $items_per_page, $page_num, $max_links);
						}
						if(!empty($_GET['page_num'])) {
							$url_extension = "?page_num=1&";
						} else {
							$url_extension = "?";
						}
						if(!empty($_REQUEST['search'])) {
							if($url_extension == '?') {
								$url_extension .= "search={$_REQUEST['search']}&sfield={$_REQUEST['sfield']}&";
							} else {
								$url_extension .= "&search={$_REQUEST['search']}&sfield={$_REQUEST['sfield']}";
							}
						}
						echo "<script type='text/javascript'>$(document).ready(function() { $(\"#num_pp\").change(function() { window.location = \"{$_SERVER['PHP_SELF']}{$url_extension}num_pp=\" + $(this).val() }); });</script>";
						echo "<div class='select_num_per_page'>";
							echo "<label for='pagination_num_per_page'>"._NUMBER_OF_PROFILES_PER_PAGE.": </label>";
							echo "<select id='num_pp' name='num_pp'>";
								echo "<option "; if($items_per_page == 5) { echo "selected "; } echo "value='5'>5</option>";
								echo "<option "; if($items_per_page == 10) { echo "selected "; } echo "value='10'>10</option>";
								echo "<option "; if($items_per_page == 20) { echo "selected "; } echo "value='20'>20</option>";
								echo "<option "; if($items_per_page == 50) { echo "selected "; } echo "value='50'>50</option>";
								echo "<option "; if($items_per_page == 100) { echo "selected "; } echo "value='100'>100</option>";
								echo "<option "; if($items_per_page == 200) { echo "selected "; } echo "value='200'>200</option>";

								echo "<option "; if($items_per_page == $num_of_items) { echo "selected "; } echo "value='All'>"._ALL."</option>";
							echo "</select>";
						echo "</div>";
					echo "</div>";
				}
			echo "</td></tr>";
		}
	}
	echo "</table><p>";
	
    if ($validUserRequired && @$session->isAdmin()===false) {
        $Notice="";
        if (@$session->canEditProfiles()===false) {
            $Notice.=_NO_PERMISSION_EDIT_PROFILE."<br>";   
        }
        if (@$session->canAddProfiles()===false) {
            $Notice.=_NO_PERMISSION_ADD_PROFILE."<br>";   
        }
        if (@$session->canUpdateLogs()===false) {
            $Notice.=_NO_PERMISSION_UPDATE."<br>";   
        }
        if ($Notice!="" && _LOGAHOLIC_EDITION!=4) {
            echo "<div style=\"width:600px;\">";
            $Notice="<b>"._PLEASE_NOTE.":</b><br>".$Notice;
            echoNotice($Notice);
            echo "</div>";    
        }
    }
    echo "</div>";
}

/* Pagination functions starts here */
function pagination_link($page_number) {
	$pagination_url = $_SERVER['PHP_SELF'].'?page_num='.$page_number;
	if(!empty($_GET['num_pp'])) {
		$pagination_url .= "&num_pp={$_GET['num_pp']}";
	}
	return $pagination_url;
}

function pagination($number_of_items, $items_pp, $page_number, $max_links) {
	$total_pages = ceil($number_of_items/$items_pp);
	if($page_number) {
		if($page_number > 1) { 
			$prev = "<a href='".pagination_link(($page_number -1 ))."'>&lt; "._PREVIOUS."</a>"; 
			$first = "<a href='".pagination_link(1)."'>&lt;&lt; "._FIRST_PAGE."</a>"; 
		} else {
			$prev = "<span>&lt; "._PREVIOUS."</span>";
			$first = "<span>&lt;&lt; "._FIRST_PAGE."</span>";
		}
	}
	
	if(!empty($_REQUEST['search'])) {
		$url_extension = "&search={$_REQUEST['search']}&sfield={$_REQUEST['sfield']}";
	} else {
		$url_extension = "";
	}
	
	if($page_number < $total_pages) {
		$next = "<a href='".pagination_link(($page_number + 1)).$url_extension."'>"._NEXT." &gt;</a>"; 
		$last = "<a href='".pagination_link($total_pages).$url_extension."'>"._LAST_PAGE." &gt;&gt;</a>";
	} else {
		$next = "<span>"._NEXT." &gt;</span>";
		$last = "<span>"._LAST_PAGE." &gt;&gt;</span>";
	}
	echo $first;
	echo $prev;
	$loop = 0;
	if($page_number >= $max_links) {
		$page_counter = ceil($page_number - ($max_links-1));
	} else {
		$page_counter = 1;
	}
	if($total_pages < $max_links){
		$max_links = $total_pages;
	}
	do{ 
		if($page_counter == $page_number) {
			echo "<strong>{$page_counter}</strong>"; 
		} else {
			echo "<a href='".pagination_link(($page_counter))."'>{$page_counter}</a>";
		} 
		$page_counter++; $current_page=($page_counter+1);
		$loop++;
	} while ($max_links > $loop);
	echo $next;
	echo $last;
}

include "includes/editprofile.php";
echo "</body></html>";
")); ?>